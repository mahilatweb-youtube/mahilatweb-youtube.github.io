<?php
try {
    // Crear la conexión a la base de datos
    $pdo = new PDO("sqlite:bots.db");
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Crear tabla de usuarios
    $pdo->exec("CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT NOT NULL UNIQUE,
        email TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL
    )");

    // Crear tabla de productos
    $pdo->exec("CREATE TABLE IF NOT EXISTS products (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL UNIQUE,
        description TEXT,
        price REAL NOT NULL
    )");

    // Crear tabla de órdenes
    $pdo->exec("CREATE TABLE IF NOT EXISTS orders (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        product_id INTEGER NOT NULL,
        quantity INTEGER NOT NULL,
        total_price REAL NOT NULL,
        order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    )");

    // Insertar productos iniciales si no existen
    $products = [
        ['name' => '100 Suscriptores', 'description' => 'Paquete de 100 suscriptores', 'price' => 4.00],
        ['name' => '500 Suscriptores', 'description' => 'Paquete de 500 suscriptores', 'price' => 22.00],
        ['name' => '1000 Suscriptores', 'description' => 'Paquete de 1000 suscriptores', 'price' => 32.00]
    ];

    $stmt = $pdo->prepare("INSERT OR IGNORE INTO products (name, description, price) VALUES (:name, :description, :price)");
    foreach ($products as $product) {
        $stmt->execute($product);
    }

    echo "Base de datos inicializada correctamente.";
} catch (PDOException $e) {
    echo "Error al inicializar la base de datos: " . $e->getMessage();
}
?>
